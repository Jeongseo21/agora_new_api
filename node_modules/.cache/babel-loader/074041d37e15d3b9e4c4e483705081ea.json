{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hjs05\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\agora-new-api-test\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hjs05\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\agora-new-api-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\hjs05\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\agora-new-api-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport AgoraRTC, { MicrophoneAudioTrackInitConfig, CameraVideoTrackInitConfig } from \"agora-rtc-sdk-ng\";\nexport default function useAgora(client) {\n  var appid = \"2e5346b36d1f40b1bbc62472116d96de\";\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      localVideoTrack = _useState2[0],\n      setLocalVideoTrack = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      localAudioTrack = _useState4[0],\n      setLocalAudioTrack = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      joinState = _useState6[0],\n      setJoinState = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      remoteUsers = _useState8[0],\n      setRemoteUsers = _useState8[1];\n\n  function createLocalTracks() {\n    return _createLocalTracks.apply(this, arguments);\n  }\n\n  function _createLocalTracks() {\n    _createLocalTracks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$AgoraRTC$creat, _yield$AgoraRTC$creat2, microphoneTrack, cameraTrack;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return AgoraRTC.createMicrophoneAndCameraTracks(MicrophoneAudioTrackInitConfig, CameraVideoTrackInitConfig);\n\n            case 2:\n              _yield$AgoraRTC$creat = _context2.sent;\n              _yield$AgoraRTC$creat2 = _slicedToArray(_yield$AgoraRTC$creat, 2);\n              microphoneTrack = _yield$AgoraRTC$creat2[0];\n              cameraTrack = _yield$AgoraRTC$creat2[1];\n              console.log(cameraTrack);\n              setLocalAudioTrack(microphoneTrack);\n              setLocalVideoTrack(cameraTrack);\n              return _context2.abrupt(\"return\", [microphoneTrack, cameraTrack]);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _createLocalTracks.apply(this, arguments);\n  }\n\n  function join(_x, _x2, _x3) {\n    return _join.apply(this, arguments);\n  }\n\n  function _join() {\n    _join = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(channel, token, uid) {\n      var _yield$createLocalTra, _yield$createLocalTra2, microphoneTrack, cameraTrack;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (client) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              _context3.next = 4;\n              return createLocalTracks();\n\n            case 4:\n              _yield$createLocalTra = _context3.sent;\n              _yield$createLocalTra2 = _slicedToArray(_yield$createLocalTra, 2);\n              microphoneTrack = _yield$createLocalTra2[0];\n              cameraTrack = _yield$createLocalTra2[1];\n              _context3.next = 10;\n              return client.join(appid, channel, token);\n\n            case 10:\n              _context3.next = 12;\n              return client.publish([microphoneTrack, cameraTrack]);\n\n            case 12:\n              setJoinState(true);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _join.apply(this, arguments);\n  }\n\n  function leave() {\n    return _leave.apply(this, arguments);\n  }\n\n  function _leave() {\n    _leave = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (localAudioTrack) {\n                localAudioTrack.stop();\n                localAudioTrack.close();\n              }\n\n              if (localVideoTrack) {\n                localVideoTrack.stop();\n                localVideoTrack.close();\n              }\n\n              setRemoteUsers([]);\n              setJoinState(false);\n              _context4.next = 6;\n              return client.leave();\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _leave.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!client) return;\n    setRemoteUsers(client.remoteUsers);\n\n    var handleUserPublished = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user, mediaType) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return client.subscribe(user, mediaType);\n\n              case 2:\n                // toggle rerender while state of remoteUsers changed.\n                setRemoteUsers(function (remoteUsers) {\n                  return Array.from(client.remoteUsers);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleUserPublished(_x4, _x5) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var handleUserUnpublished = function handleUserUnpublished(user) {\n      setRemoteUsers(function (remoteUsers) {\n        return Array.from(client.remoteUsers);\n      });\n    };\n\n    var handleUserJoined = function handleUserJoined(user) {\n      setRemoteUsers(function (remoteUsers) {\n        return Array.from(client.remoteUsers);\n      });\n    };\n\n    var handleUserLeft = function handleUserLeft(user) {\n      setRemoteUsers(function (remoteUsers) {\n        return Array.from(client.remoteUsers);\n      });\n    };\n\n    client.on(\"user-published\", handleUserPublished);\n    client.on(\"user-unpublished\", handleUserUnpublished);\n    client.on(\"user-joined\", handleUserJoined);\n    client.on(\"user-left\", handleUserLeft);\n    return function () {\n      client.off(\"user-published\", handleUserPublished);\n      client.off(\"user-unpublished\", handleUserUnpublished);\n      client.off(\"user-joined\", handleUserJoined);\n      client.off(\"user-left\", handleUserLeft);\n    };\n  }, [client]);\n  return {\n    localAudioTrack: localAudioTrack,\n    localVideoTrack: localVideoTrack,\n    joinState: joinState,\n    leave: leave,\n    join: join,\n    remoteUsers: remoteUsers\n  };\n}","map":{"version":3,"sources":["C:/Users/hjs05/OneDrive/바탕 화면/agora-new-api-test/src/hooks/useAgora.js"],"names":["useState","useEffect","AgoraRTC","MicrophoneAudioTrackInitConfig","CameraVideoTrackInitConfig","useAgora","client","appid","localVideoTrack","setLocalVideoTrack","localAudioTrack","setLocalAudioTrack","joinState","setJoinState","remoteUsers","setRemoteUsers","createLocalTracks","createMicrophoneAndCameraTracks","microphoneTrack","cameraTrack","console","log","join","channel","token","uid","publish","leave","stop","close","handleUserPublished","user","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","on","off"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport AgoraRTC, {\r\n  MicrophoneAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig\r\n} from \"agora-rtc-sdk-ng\";\r\n\r\nexport default function useAgora(client) {\r\n  const appid = \"2e5346b36d1f40b1bbc62472116d96de\";\r\n\r\n  const [localVideoTrack, setLocalVideoTrack] = useState(\"\");\r\n  const [localAudioTrack, setLocalAudioTrack] = useState(\"\");\r\n\r\n  const [joinState, setJoinState] = useState(false);\r\n\r\n  const [remoteUsers, setRemoteUsers] = useState([]);\r\n\r\n  async function createLocalTracks() {\r\n    const [\r\n      microphoneTrack,\r\n      cameraTrack\r\n    ] = await AgoraRTC.createMicrophoneAndCameraTracks(\r\n      MicrophoneAudioTrackInitConfig,\r\n      CameraVideoTrackInitConfig\r\n    );\r\n    console.log(cameraTrack);\r\n\r\n    setLocalAudioTrack(microphoneTrack);\r\n    setLocalVideoTrack(cameraTrack);\r\n\r\n    return [microphoneTrack, cameraTrack];\r\n  }\r\n\r\n  async function join(channel, token, uid) {\r\n    if (!client) return;\r\n    const [microphoneTrack, cameraTrack] = await createLocalTracks();\r\n\r\n    await client.join(appid, channel, token);\r\n    await client.publish([microphoneTrack, cameraTrack]);\r\n\r\n    setJoinState(true);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n    if (localVideoTrack) {\r\n      localVideoTrack.stop();\r\n      localVideoTrack.close();\r\n    }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    await client.leave();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n\r\n    const handleUserPublished = async (user, mediaType) => {\r\n      await client.subscribe(user, mediaType);\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserUnpublished = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserJoined = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    const handleUserLeft = (user) => {\r\n      setRemoteUsers((remoteUsers) => Array.from(client.remoteUsers));\r\n    };\r\n\r\n    client.on(\"user-published\", handleUserPublished);\r\n    client.on(\"user-unpublished\", handleUserUnpublished);\r\n    client.on(\"user-joined\", handleUserJoined);\r\n    client.on(\"user-left\", handleUserLeft);\r\n\r\n    return () => {\r\n      client.off(\"user-published\", handleUserPublished);\r\n      client.off(\"user-unpublished\", handleUserUnpublished);\r\n      client.off(\"user-joined\", handleUserJoined);\r\n      client.off(\"user-left\", handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    localVideoTrack,\r\n    joinState,\r\n    leave,\r\n    join,\r\n    remoteUsers\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}